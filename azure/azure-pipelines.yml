
trigger:
    batch: true
    branches:
        include:
            - master
pr: none

variables:
    system.debug: true

name: 1.0.$(Rev:r)

stages:
    - stage: Build
      displayName: Build
      pool:
        vmImage: 'ubuntu-latest'
        demands: npm
      jobs:
        - job: compile
          steps:
          - checkout: self
            clean: true
            persistCredentials: true
            fetchDepth: 1
          - task: NodeTool@0
            displayName: 'Use Node 16 LTS'
            inputs:
               versionSpec: '16.13.1'
          - task: Npm@1
            displayName: 'npm install'
            inputs:
                command: ci
                verbose: false
            timeoutInMinutes: 5
          - bash: echo "##[debug]Working directory" && ls -al $(System.DefaultWorkingDirectory)/*
          - bash: echo "##[debug]Staging directory" && ls -al $(Build.ArtifactsDirectory)/*
          - task: PublishPipelineArtifact@0
            inputs:
                targetPath: $(System.ArtifactsDirectory)

    - stage: Package
      displayName: Package
      pool:
          vmImage: 'ubuntu-latest'
      jobs:
          - job: package
            steps:
            - checkout: none
            -   task: DownloadPipelineArtifact@1
                inputs:
                  downloadPath: $(System.DefaultWorkingDirectory)
            -   bash: echo "##[debug]Working directory" && ls -al $(System.DefaultWorkingDirectory)/*
            - task: ArchiveFiles@2
              inputs:
                  rootFolderOrFile: $(System.DefaultWorkingDirectory)/*.zip
                  includeRootFoulder: false

    - stage: Deploy
      displayName: Deploy
      pool:
          vmImage: 'ubuntu-latest'
      jobs:
          - deployment: deployApp
            displayName: Deploy app
            environment: 'testpipeline-dev'
            strategy:
                runOnce:
                    deploy:
                        steps:
                        - checkout: none
                        - task: DownloadPipelineArtifact@1
                          inputs:
                            downloadPath: $(System.DefaultWorkingDirectory)
                        - bash: echo "##[debug]Working directory" && ls -al $(System.DefaultWorkingDirectory)/*
                        - task: GithubRelease@1
                          displayName: 'Create GitHub Release'
                          inputs:
                              gitHubConnection: github.com_bdylanwalker
                              repositoryName: bdylanwalker/test-pipeline
                              tagSource: userSpecifiedTag
                              tag: release-$(Build.BuildNumber)
                              assets: $(Build.DefaultWorkingDirectory)/**/*.zip
                        -   bash: echo "##[debug]Artifact staging directory" && ls -al $(System.ArtifactStagingDirectory)/*


